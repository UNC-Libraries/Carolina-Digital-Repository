<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util.xsd">
	
	<bean name="propertiesURI" class="java.lang.System" factory-method="getProperty">
		<constructor-arg index="0" value="server.properties.uri"/>
		<!-- property name for properties URI location -->
		<constructor-arg index="1" value="classpath:server.properties"/>
		<!-- default location for testing -->
	</bean>
	<bean id="serverProperties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<ref bean="propertiesURI"/>
				<value>classpath:cdr-services.properties</value>
				<value>classpath:scheduled-events.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="false"/>
	</bean>
	
	<!-- Solr ingest dependencies -->
	
	<bean id="updateDocTransformer" class="edu.unc.lib.dl.data.ingest.solr.UpdateDocTransformer"
		init-method="init">
		<property name="xslName" value="${addDocXslName}"/>
	</bean>
	
	<bean id="searchSettings" class="edu.unc.lib.dl.search.solr.util.SearchSettings">
		<property name="properties" ref="searchProperties" />
	</bean>
	<bean id="solrSettings" class="edu.unc.lib.dl.search.solr.util.SolrSettings">
		<property name="properties" ref="solrProperties" />
	</bean>
	<util:properties id="searchProperties" location="classpath:search.properties" />
	<util:properties id="solrProperties" location="classpath:solr.properties"
		local-override="true">
		<prop key="solr.path">${solr.protocol}://${solr.host}${solr.port}/${solr.context}</prop>
	</util:properties>

	<bean id="hierarchicalFacet" class="edu.unc.lib.dl.search.solr.model.HierarchicalFacet"/>

	<bean id="solrDataAccessLayer" class="edu.unc.lib.dl.data.ingest.solr.SolrDataAccessLayer"
		init-method="initializeSolrServer">
		<property name="solrSettings" ref="solrSettings"/>
	</bean>
	<bean id="solrSearchService" class="edu.unc.lib.dl.search.solr.service.SolrSearchService"
		init-method="initializeSolrServer">
		<property name="solrSettings" ref="solrSettings"/>
	</bean>
	<bean id="searchStateFactory" class="edu.unc.lib.dl.search.solr.service.SearchStateFactory">
	</bean>
	<util:set id="accessGroups" set-class="edu.unc.lib.dl.security.access.AccessGroupSet">
		<value>${access.group.admin}</value>
	</util:set>
</beans>
