<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2008 The University of North Carolina at Chapel Hill

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jms="http://www.springframework.org/schema/jms"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.0.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<bean name="propertiesURI" class="java.lang.System"
		factory-method="getProperty">
		<constructor-arg index="0" value="server.properties.uri" />
		<!-- property name for properties URI location -->
		<constructor-arg index="1" value="classpath:server.properties" />
		<!-- default location for testing -->
	</bean>
	<bean id="serverProperties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<ref bean="propertiesURI" />
				<value>classpath:cdr-services.properties</value>
				<value>classpath:scheduled-events.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="false" />
	</bean>

	<bean id="swordPath" class="java.lang.String">
		<constructor-arg
			value="${repository.protocol}://${repository.host}${repository.port}/${sword.context}/" />
	</bean>

	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="jmsFactory" />
		<property name="defaultDestinationName" value="repository.updates" />
		<property name="pubSubDomain" value="true" />
	</bean>

	<bean id="operationsMessageSender" class="edu.unc.lib.dl.services.OperationsMessageSender">
		<property name="jmsTemplate" ref="jmsTemplate" />
	</bean>

	<bean id="aipIngestPipeline" class="edu.unc.lib.dl.ingest.aip.AIPIngestPipeline">
		<property name="preIngestFilters">
			<list>
				<bean class="edu.unc.lib.dl.ingest.aip.LogIdentifierAssignmentFilter" />
				<bean class="edu.unc.lib.dl.ingest.aip.CheckAIPRequirementsFilter" />
				<bean class="edu.unc.lib.dl.ingest.aip.CheckContainerFilter">
					<property name="tripleStoreQueryService" ref="tripleStoreQueryService" />
				</bean>
				<bean class="edu.unc.lib.dl.ingest.aip.CheckPathConflictFilter">
					<property name="tripleStoreQueryService" ref="tripleStoreQueryService" />
				</bean>
				<bean class="edu.unc.lib.dl.ingest.aip.MODSValidationFilter">
					<property name="schematronValidator" ref="schematronValidator" />
				</bean>
				<bean class="edu.unc.lib.dl.ingest.aip.DublinCoreCrosswalkFilter" />
			</list>
		</property>
	</bean>

	<bean id="mailNotifier" class="edu.unc.lib.dl.services.MailNotifier">
		<property name="mailSender">
			<bean class="org.springframework.mail.javamail.JavaMailSenderImpl">
				<property name="host" value="${smtp.host}" />
				<property name="port" value="${smtp.port}" />
				<property name="defaultEncoding" value="UTF-8" />
			</bean>
		</property>
		<property name="irBaseUrl"
			value="https://${repository.host}${repository.port}/${admin.webapp.name}/" />
		<property name="freemarkerConfiguration" ref="freemarkerConfiguration" />
		<property name="administratorAddress" value="${administrator.email}" />
		<property name="repositoryFromAddress" value="${repository.from.email}" />
	</bean>

	<bean id="freemarkerConfiguration" class="freemarker.template.Configuration">
		<property name="templateLoader">
			<bean class="freemarker.cache.ClassTemplateLoader">
				<constructor-arg index="0" type="java.lang.Class"
					value="edu.unc.lib.dl.services.MailNotifier" />
				<constructor-arg index="1" value="" />
			</bean>
		</property>
	</bean>

	<bean id="digitalObjectManager" class="edu.unc.lib.dl.services.DigitalObjectManagerImpl">
		<property name="managementClient" ref="managementClient" />
		<property name="accessClient" ref="accessClient" />
		<property name="operationsMessageSender" ref="operationsMessageSender" />
		<property name="tripleStoreQueryService" ref="tripleStoreQueryService" />
		<property name="sipProcessorFactory" ref="sipProcessorFactory" />
		<property name="aipIngestPipeline" ref="aipIngestPipeline" />
		<property name="schematronValidator" ref="schematronValidator" />
		<property name="containerContentsHelper">
			<bean class="edu.unc.lib.dl.util.ContainerContentsHelper">
				<property name="tripleStoreQueryService" ref="tripleStoreQueryService" />
			</bean>
		</property>
		<property name="mailNotifier" ref="mailNotifier" />
		<property name="available" value="true" />
	</bean>

	<bean name="agentManager" class="edu.unc.lib.dl.agents.AgentManager">
		<property name="tripleStoreQueryService" ref="tripleStoreQueryService" />
		<property name="digitalObjectManager" ref="digitalObjectManager" />
	</bean>

	<bean class="edu.unc.lib.dl.schematron.SchematronValidator" name="schematronValidator"
		init-method="loadSchemas">
		<property name="schemas">
			<map>
				<entry key="http://cdr.unc.edu/METS/profiles/Simple"
					value="classpath:edu/unc/lib/dl/schematron/simple_mets_profile.sch" />
				<entry key="object-mods"
					value="classpath:edu/unc/lib/dl/schematron/object-mods.sch" />
				<entry key="vocabularies-mods"
					value="classpath:edu/unc/lib/dl/schematron/vocabularies-mods.sch" />
			</map>
		</property>
	</bean>

	<bean id="pidGenerator" class="edu.unc.lib.dl.pidgen.UUIDPIDGenerator"
		init-method="init">
		<property name="tripleStoreQueryService" ref="tripleStoreQueryService" />
		<property name="verifyUnique" value="false" />
	</bean>

	<!-- Ingest package processors -->

	<bean id="singleFileSIPProcessor" class="edu.unc.lib.dl.ingest.sip.SingleFileSIPProcessor">
		<property name="pidGenerator" ref="pidGenerator" />
		<property name="tripleStoreQueryService" ref="tripleStoreQueryService" />
	</bean>

	<bean id="singleFolderSIPProcessor" class="edu.unc.lib.dl.ingest.sip.SingleFolderSIPProcessor">
		<property name="pidGenerator" ref="pidGenerator" />
	</bean>

	<bean id="metsPackageSIPProcessor" class="edu.unc.lib.dl.ingest.sip.METSPackageSIPProcessor">
		<property name="schematronValidator" ref="schematronValidator" />
		<property name="metsPackageFileValidator">
			<bean class="edu.unc.lib.dl.ingest.sip.METSPackageFileValidator" />
		</property>
		<property name="pidGenerator" ref="pidGenerator" />
	</bean>

	<bean id="sipProcessorFactory" class="edu.unc.lib.dl.ingest.sip.SIPProcessorFactory"
		init-method="init">
		<property name="sipProcessors">
			<map>
				<entry key="edu.unc.lib.dl.ingest.sip.METSPackageSIP"
					value-ref="metsPackageSIPProcessor" />
				<entry key="edu.unc.lib.dl.ingest.sip.SingleFileSIP"
					value-ref="singleFileSIPProcessor" />
				<entry key="edu.unc.lib.dl.ingest.sip.SingleFolderSIP"
					value-ref="singleFolderSIPProcessor" />
			</map>
		</property>
	</bean>
	
	<!-- SWORD config -->

	<bean id="swordConfigurationImpl" class="edu.unc.lib.dl.cdr.services.sword.SwordConfigurationImpl"
		init-method="init">
		<property name="authType" value="Basic"/>
	</bean>
	
	<bean id="collectionListManager" class="edu.unc.lib.dl.cdr.services.sword.managers.CollectionListManagerImpl">
	</bean>
	
	<bean id="collectionDepositManager" class="edu.unc.lib.dl.cdr.services.sword.managers.CollectionDepositManagerImpl">
	</bean>
	
	<bean id="serviceDocumentManager" class="edu.unc.lib.dl.cdr.services.sword.managers.ServiceDocumentManagerImpl">
	</bean>
	
	<context:annotation-config />
	
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"></bean>
	<bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"></bean>
	<context:component-scan base-package="edu.unc.lib.dl.cdr.services.sword.servlets" />

</beans>