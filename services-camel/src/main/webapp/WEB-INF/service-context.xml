<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:camel="http://camel.apache.org/schema/spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://camel.apache.org/schema/spring
		http://camel.apache.org/schema/spring/camel-spring.xsd">

	<context:annotation-config />
	
	<bean name="propertiesURI" class="java.lang.System"
		factory-method="getProperty">
		<constructor-arg index="0" value="config.properties.uri" />
		<constructor-arg index="1" value="classpath:config.properties" />
	</bean>
	
	<bean id="bridgePropertyPlaceholder" class="org.apache.camel.spring.spi.BridgePropertyPlaceholderConfigurer">
		<property name="location" ref="propertiesURI"/>
	</bean>
	
	<bean id="fcrepoClientFactory" class="edu.unc.lib.dl.fcrepo4.FcrepoClientFactory" factory-method="factory">
		<constructor-arg value="${fcrepo.baseUrl}" />
	</bean>
	
	<bean id="fcrepoClient" class="org.fcrepo.client.FcrepoClient"
			factory-bean="fcrepoClientFactory" factory-method="makeClient">
	</bean>

	<bean id="ldpContainerFactory" class="edu.unc.lib.dl.fcrepo4.LdpContainerFactory">
		<property name="client" ref="fcrepoClient" />
	</bean>

	<bean id="repositoryObjectFactory" class="edu.unc.lib.dl.fcrepo4.RepositoryObjectFactory">
		<property name="client" ref="fcrepoClient" />
		<property name="ldpFactory" ref="ldpContainerFactory" />
	</bean>

	<bean id="repositoryObjectDataLoader" class="edu.unc.lib.dl.fcrepo4.RepositoryObjectDataLoader">
		<property name="client" ref="fcrepoClient" />
		<property name="repository" ref="repository" />
		<property name="tripleStoreQueryService" ref="tripleStoreQueryService" />
	</bean>
	
	<bean id="repositoryObjectCacheLoader" class="edu.unc.lib.dl.fcrepo4.RepositoryObjectCacheLoader">
		<property name="client" ref="fcrepoClient" />
		<property name="repository" ref="repository" />
		<property name="repositoryObjectDataLoader" ref="repositoryObjectDataLoader" />
	</bean>
	
	<bean id="tripleStoreQueryService" class="edu.unc.lib.dl.util.TripleStoreQueryServiceFusekiImpl">
		<property name="fusekiEndpointURL" value="${triplestore.baseUrl}" />
		<property name="fusekiQueryURL" value="${triplestore.queryService}" />
	</bean>

	<bean id="repository" class="edu.unc.lib.dl.fcrepo4.Repository" init-method="init">
		<property name="client" ref="fcrepoClient" />
		<property name="repositoryObjectCacheLoader" ref="repositoryObjectCacheLoader" />
		<property name="repositoryObjectDataLoader" ref="repositoryObjectDataLoader" />
		<property name="repositoryObjectFactory" ref="repositoryObjectFactory" />
		<property name="baseUri" value="${fcrepo.baseUrl}" />
		<property name="serverUri" value="${fcrepo.serverUri}" />
	</bean>

	<bean id="pids"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="edu.unc.lib.dl.fcrepo4.PIDs" />
		<property name="targetMethod" value="setRepository" />
		<property name="arguments">
			<list>
				<ref bean="repository" />
			</list>
		</property>
	</bean>
	
	<bean id="vocabManager" class="edu.unc.lib.dl.util.VocabularyHelperManager">
	</bean>
	
	<!-- Solr settings -->

	<bean id="solrFullUpdatePipeline"
		class="edu.unc.lib.dl.data.ingest.solr.indexing.DocumentIndexingPipeline">
		<property name="filters">
			<list>
				<ref bean="setAccessControlFilter" />
				<ref bean="setAccessStatusFilter" />
				<ref bean="setCollectionSupplementalInformationFilter" />
				<ref bean="setContentStatusFilter" />
				<ref bean="setContentTypeFilter" />
				<ref bean="setDatastreamFilter" />
				<ref bean="setDescriptiveMetadataFilter" />
				<ref bean="setFullTextFilter" />
				<ref bean="setObjectTypeFilter" />
				<ref bean="setPathFilter" />
				<ref bean="setRecordDatesFilter" />
				<ref bean="setRelationsFilter" />
				<ref bean="setStatusTagsFilter" />
			</list>
		</property>
	</bean>

	<bean id="solrUpdateDriver"
		class="edu.unc.lib.dl.data.ingest.solr.indexing.SolrUpdateDriver"
		init-method="init">
		<property name="solrSettings" ref="solrSettings" />
		<property name="autoPushCount" value="1000" />
		<property name="updateThreads" value="2" />
	</bean>
	
	<util:properties id="searchProperties" location="classpath:search.properties" />
	<util:properties id="solrProperties" location="classpath:solr.properties">
		<prop key="solr.path">${solr.protocol}://${solr.host}${solr.port}/${solr.context}
		</prop>
	</util:properties>
	
	<bean id="searchSettings" class="edu.unc.lib.dl.search.solr.util.SearchSettings">
		<property name="properties" ref="searchProperties" />
	</bean>

	<bean id="solrSettings" class="edu.unc.lib.dl.search.solr.util.SolrSettings">
		<property name="properties" ref="solrProperties" />
	</bean>
	
	<bean id="searchStateUtil" class="edu.unc.lib.dl.search.solr.util.SearchStateUtil">
		<property name="searchSettings" ref="searchSettings" />
	</bean>
	
	<bean id="facetFieldFactory" class="edu.unc.lib.dl.search.solr.model.FacetFieldFactory">
		<property name="searchSettings" ref="searchSettings" />
		<property name="solrSettings" ref="solrSettings" />
	</bean>
	
	<bean id="facetFieldUtil" class="edu.unc.lib.dl.search.solr.util.FacetFieldUtil">
		<property name="searchSettings" ref="searchSettings" />
		<property name="solrSettings" ref="solrSettings" />
	</bean>

	<bean id="searchStateFactory" class="edu.unc.lib.dl.search.solr.service.SearchStateFactory">
		<property name="searchSettings" ref="searchSettings" />
		<property name="facetFieldFactory" ref="facetFieldFactory" />
	</bean>

	<bean id="searchActionService" class="edu.unc.lib.dl.search.solr.service.SearchActionService">
		<property name="searchSettings" ref="searchSettings" />
		<property name="facetFieldFactory" ref="facetFieldFactory" />
	</bean>
	
	<bean id="pathFactory" class="edu.unc.lib.dl.search.solr.service.ObjectPathFactory">
		<property name="search" ref="queryLayer" />
		<property name="cacheSize" value="1000" />
		<property name="timeToLiveMilli" value="10000" />
		<property name="solrSettings" ref="solrSettings" />
	</bean>
	
	<bean id="queryLayer" class="edu.unc.lib.dl.search.solr.service.SolrSearchService"
		init-method="initializeSolrServer">
		<property name="solrSettings" ref="solrSettings" />
		<property name="searchSettings" ref="searchSettings" />
		<property name="facetFieldUtil" ref="facetFieldUtil" />
	</bean>
	
	<!-- ACL related beans -->
	<bean id="sparqlQueryService" class="edu.unc.lib.dl.sparql.FusekiSparqlQueryServiceImpl">
		<property name="fusekiQueryURL" value="${fuseki.baseUri}" />
	</bean>
	
	<bean id="contentPathFactory" class="edu.unc.lib.dl.fedora.ContentPathFactory"
			init-method="init">
		<property name="cacheMaxSize" value="${cache.contentPath.maxSize}" />
		<property name="cacheTimeToLive" value="${cache.contentPath.timeToLive}" />
		<property name="queryService" ref="sparqlQueryService" />
	</bean>
	
	<bean id="objectAclFactory" class="edu.unc.lib.dl.acl.fcrepo4.ObjectAclFactory"
			init-method="init">
		<property name="cacheMaxSize" value="${cache.objectAcls.maxSize}" />
		<property name="cacheTimeToLive" value="${cache.objectAcls.timeToLive}" />
		<property name="queryService" ref="sparqlQueryService" />
	</bean>
	
	<bean id="objectPermissionEvaluator" class="edu.unc.lib.dl.acl.fcrepo4.ObjectPermissionEvaluator">
		<property name="aclFactory" ref="objectAclFactory" />
	</bean>
	
	<bean id="inheritedPermissionEvaluator" class="edu.unc.lib.dl.acl.fcrepo4.InheritedPermissionEvaluator">
		<property name="objectPermissionEvaluator" ref="objectPermissionEvaluator" />
		<property name="pathFactory" ref="contentPathFactory" />
	</bean>
	
	<bean id="inheritedAclFactory" class="edu.unc.lib.dl.acl.fcrepo4.InheritedAclFactory">
		<property name="objectAclFactory" ref="objectAclFactory" />
		<property name="pathFactory" ref="contentPathFactory" />
		<property name="objectPermissionEvaluator" ref="objectPermissionEvaluator" />
	</bean>
	
	<!-- Solr ingest filters -->
	<bean id="setAccessControlFilter"
		class="edu.unc.lib.dl.data.ingest.solr.filter.SetAccessControlFilter">
		<property name="aclFactory" ref="inheritedAclFactory" />
	</bean>
	<bean id="setAccessStatusFilter"
		class="edu.unc.lib.dl.data.ingest.solr.filter.SetAccessStatusFilter">
		<property name="inheritedAclFactory" ref="inheritedAclFactory" />
		<property name="objectAclFactory" ref="objectAclFactory" />
	</bean>
	<bean id="setCollectionSupplementalInformationFilter" class="edu.unc.lib.dl.data.ingest.solr.filter.SetCollectionSupplementalInformationFilter">
		<property name="collectionFilters" value="${services.indexing.collectionFilters}" />
	</bean>
	<bean id="setContentStatusFilter" class="edu.unc.lib.dl.data.ingest.solr.filter.SetContentStatusFilter">
	</bean>
	<bean id="setContentTypeFilter" class="edu.unc.lib.dl.data.ingest.solr.filter.SetContentTypeFilter">
	</bean>
	<bean id="setDatastreamFilter"
		class="edu.unc.lib.dl.data.ingest.solr.filter.SetDatastreamFilter">
	</bean>
	<bean id="setDescriptiveMetadataFilter"
		class="edu.unc.lib.dl.data.ingest.solr.filter.SetDescriptiveMetadataFilter">
		<property name="vocabManager" ref="vocabManager" />
	</bean>
	<bean id="setFullTextFilter" class="edu.unc.lib.dl.data.ingest.solr.filter.SetFullTextFilter">
	</bean>
	<bean id="setObjectTypeFilter" class="edu.unc.lib.dl.data.ingest.solr.filter.SetObjectTypeFilter">
	</bean>
	<bean id="setPathFilter" class="edu.unc.lib.dl.data.ingest.solr.filter.SetPathFilter">
	   <property name="pathFactory" ref="contentPathFactory" />
	</bean>
	<bean id="setRecordDatesFilter"
		class="edu.unc.lib.dl.data.ingest.solr.filter.SetRecordDatesFilter">
	</bean>
	<bean id="setRelationsFilter"
		class="edu.unc.lib.dl.data.ingest.solr.filter.SetRelationsFilter">
	</bean>
	<bean id="setStatusTagsFilter" class="edu.unc.lib.dl.data.ingest.solr.filter.SetStatusTagsFilter">
	</bean>

	<!-- Ingest Actions -->
	<bean id="updateObjectAction"
		class="edu.unc.lib.dl.data.ingest.solr.action.UpdateObjectAction">
		<property name="pipeline" ref="solrFullUpdatePipeline" />
	</bean>
	
<!--	<bean id="updateDescriptionAction"
		class="edu.unc.lib.dl.data.ingest.solr.action.UpdateObjectAction">
		<property name="pipeline" ref="solrDescriptionUpdatePipeline" />
		<property name="addDocumentMode" value="false" />
	</bean>
	
	<bean id="updateDatastreamsAction"
		class="edu.unc.lib.dl.data.ingest.solr.action.UpdateObjectAction">
		<property name="pipeline" ref="solrDatastreamUpdatePipeline" />
		<property name="addDocumentMode" value="false" />
	</bean>
	
	<bean id="updateFullTextAction"
		class="edu.unc.lib.dl.data.ingest.solr.action.UpdateObjectAction">
		<property name="pipeline" ref="solrFullTextUpdatePipeline" />
		<property name="addDocumentMode" value="false" />
	</bean>
	
	<bean id="updateTreeAction"
		class="edu.unc.lib.dl.data.ingest.solr.action.UpdateTreeAction">
		<property name="pipeline" ref="solrFullUpdatePipeline" />
		<property name="solrSearchService" ref="queryLayer" />
		<property name="collectionsPid" ref="collectionsPid" />
		<property name="accessGroups" ref="accessGroups" />
		<property name="updateDelay" value="${conductor.solr.beforeExecuteDelay}"/>
	</bean>
	
	<bean id="indexTreeInplaceAction"
		class="edu.unc.lib.dl.data.ingest.solr.action.IndexTreeInplaceAction">
		<property name="pipeline" ref="solrFullUpdatePipeline" />
		<property name="solrSettings" ref="solrSettings" />
		<property name="collectionsPid" ref="collectionsPid" />
		<property name="solrSearchService" ref="queryLayer" />
		<property name="accessGroups" ref="accessGroups" />
		<property name="updateDelay" value="${conductor.solr.beforeExecuteDelay}"/>
	</bean>
	
	<bean id="indexTreeCleanAction"
		class="edu.unc.lib.dl.data.ingest.solr.action.IndexTreeCleanAction">
		<property name="deleteAction" ref="deleteSolrTreeAction" />
		<property name="pipeline" ref="solrFullUpdatePipeline" />
		<property name="collectionsPid" ref="collectionsPid" />
		<property name="solrSearchService" ref="queryLayer" />
		<property name="accessGroups" ref="accessGroups" />
		<property name="updateDelay" value="${conductor.solr.beforeExecuteDelay}"/>
	</bean>

	<bean id="clearIndexAction" class="edu.unc.lib.dl.data.ingest.solr.action.ClearIndexAction">
	</bean>

	<bean id="deleteObjectAction"
		class="edu.unc.lib.dl.data.ingest.solr.action.DeleteObjectAction">
	</bean>

	<bean id="deleteSolrTreeAction"
		class="edu.unc.lib.dl.data.ingest.solr.action.DeleteSolrTreeAction">
		<property name="solrSearchService" ref="queryLayer" />
		<property name="searchSettings" ref="searchSettings" />
		<property name="solrSettings" ref="solrSettings" />
		<property name="accessGroups" ref="accessGroups" />
	</bean>

	<bean id="commitAction" class="edu.unc.lib.dl.data.ingest.solr.action.CommitAction">
	</bean>
	
	<bean id="updateAccessControlAction"
		class="edu.unc.lib.dl.data.ingest.solr.action.UpdateTreeAction">
		<property name="pipeline" ref="solrAccessControlUpdatePipeline" />
		<property name="addDocumentMode" value="false" />
		<property name="updateDelay" value="${conductor.solr.beforeUpdateDelay}"/>
	</bean>
	
	<bean id="addSetToParentAction"
		class="edu.unc.lib.dl.data.ingest.solr.action.UpdateChildSetAction">
		<property name="pipeline" ref="solrFullUpdatePipeline" />
		<property name="updateDelay" value="${conductor.solr.beforeExecuteDelay}"/>
	</bean>
	
	<bean id="moveObjectsAction"
		class="edu.unc.lib.dl.data.ingest.solr.action.MoveObjectsAction">
		<property name="pipeline" ref="solrMoveUpdatePipeline" />
		<property name="updateDelay" value="${conductor.solr.beforeUpdateDelay}"/>
	</bean>
	
	<bean id="updateTypeAction"
		class="edu.unc.lib.dl.data.ingest.solr.action.UpdateTreeSetAction">
		<property name="pipeline" ref="solrUpdateTypePipeline" />
		<property name="addDocumentMode" value="false" />
		<property name="updateDelay" value="${conductor.solr.beforeUpdateDelay}"/>
	</bean>

	<bean id="updateDWOAction"
		class="edu.unc.lib.dl.data.ingest.solr.action.UpdateTreeSetAction">
		<property name="pipeline" ref="solrSetDWOPipeline" />
		<property name="addDocumentMode" value="false" />
		<property name="updateDelay" value="${conductor.solr.beforeUpdateDelay}"/>
	</bean> -->
	
	<util:map id="solrIndexingActionMap"
		key-type="edu.unc.lib.dl.util.IndexingActionType"
		value-type="edu.unc.lib.dl.data.ingest.solr.action.IndexingAction">
		<entry key="ADD" value-ref="updateObjectAction" />
	<!--  	<entry key="UPDATE_DESCRIPTION" value-ref="updateDescriptionAction" />
		<entry key="UPDATE_DATASTREAMS" value-ref="updateDatastreamsAction" />
		<entry key="UPDATE_FULL_TEXT" value-ref="updateFullTextAction" />
		<entry key="RECURSIVE_REINDEX" value-ref="indexTreeInplaceAction" />
		<entry key="RECURSIVE_ADD" value-ref="updateTreeAction" />
		<entry key="CLEAN_REINDEX" value-ref="indexTreeCleanAction" />
		<entry key="CLEAR_INDEX" value-ref="clearIndexAction" />
		<entry key="DELETE" value-ref="deleteObjectAction" />
		<entry key="DELETE_SOLR_TREE" value-ref="deleteSolrTreeAction" />
		<entry key="COMMIT" value-ref="commitAction" />
		<entry key="UPDATE_STATUS" value-ref="updateAccessControlAction" />
		<entry key="UPDATE_ACCESS" value-ref="updateAccessControlAction" />
		<entry key="MOVE" value-ref="moveObjectsAction" />
		<entry key="ADD_SET_TO_PARENT" value-ref="addSetToParentAction" />
		<entry key="UPDATE_TYPE" value-ref="updateTypeAction" />
		<entry key="SET_DEFAULT_WEB_OBJECT" value-ref="updateDWOAction" />-->
	</util:map>

	<!-- Processors -->
	<bean id="binaryMetadataProcessor" class="edu.unc.lib.cdr.BinaryMetadataProcessor">
		<constructor-arg value="${fcrepo.binaryBase}"/>
	</bean>

	<bean id="addSmallThumbnailProcessor" class="edu.unc.lib.cdr.AddDerivativeProcessor">
		<constructor-arg ref="repository"/>
		<constructor-arg value="#{T(edu.unc.lib.dl.fcrepo4.RepositoryPathConstants).SMALL_THUMBNAIL}"/>
		<constructor-arg value="${cdr.enhancement.thumbnail.fileExtension}" />
		<constructor-arg value="${cdr.enhancement.thumbnail.mimetype}" />
		<constructor-arg value="${error.maxRedeliveries}" />
		<constructor-arg value="${error.retryDelay}" />
	</bean>
	
	<bean id="addLargeThumbnailProcessor" class="edu.unc.lib.cdr.AddDerivativeProcessor">
		<constructor-arg ref="repository"/>
		<constructor-arg value="#{T(edu.unc.lib.dl.fcrepo4.RepositoryPathConstants).LARGE_THUMBNAIL}"/>
		<constructor-arg value="${cdr.enhancement.thumbnail.fileExtension}" />
		<constructor-arg value="${cdr.enhancement.thumbnail.mimetype}" />
		<constructor-arg value="${error.maxRedeliveries}" />
		<constructor-arg value="${error.retryDelay}" />
	</bean>
	
	<bean id="addAccessCopyProcessor" class="edu.unc.lib.cdr.AddDerivativeProcessor">
		<constructor-arg ref="repository"/>
		<constructor-arg value="#{T(edu.unc.lib.dl.fcrepo4.RepositoryPathConstants).JPEG_2000}"/>
		<constructor-arg value="${cdr.enhancement.jp2.fileExtension}" />
		<constructor-arg value="${cdr.enhancement.jp2.mimetype}" />
		<constructor-arg value="${error.maxRedeliveries}" />
		<constructor-arg value="${error.retryDelay}" />
	</bean>
	
	<bean id="fulltextProcessor" class="edu.unc.lib.cdr.FulltextProcessor">
		<constructor-arg ref="repository"/>
		<constructor-arg value="#{T(edu.unc.lib.dl.fcrepo4.RepositoryPathConstants).FULLTEXT_EXTRACTION}"/>
		<constructor-arg value="${cdr.enhancement.fulltext.fileName}" />
		<constructor-arg value="${error.maxRedeliveries}" />
		<constructor-arg value="${error.retryDelay}" />
	</bean>
	
	<bean id="replicationProcessor" class="edu.unc.lib.cdr.ReplicationProcessor">
		<constructor-arg value="${cdr.replication.locations}" />
		<constructor-arg value="${error.maxRedeliveries}" />
		<constructor-arg value="${error.retryDelay}" />
	</bean>
	
	<bean id="getBinaryProcessor" class="edu.unc.lib.cdr.GetBinaryProcessor">
		<property name="repository" ref="repository"/>
	</bean>
	
	<bean id="cleanupBinaryProcessor" class="edu.unc.lib.cdr.CleanupBinaryProcessor">
	</bean>
	
	<bean id="dipDataLoader"
		class="edu.unc.lib.dl.data.ingest.solr.indexing.DocumentIndexingPackageDataLoader">
		<property name="repository" ref="repository" />
	</bean>
	
	<bean id="dipFactory"
		class="edu.unc.lib.dl.data.ingest.solr.indexing.DocumentIndexingPackageFactory">
		<property name="dataLoader" ref="dipDataLoader" />
	</bean>
	
	<bean id="solrIngestProcessor" class="edu.unc.lib.cdr.SolrIngestProcessor">
		<constructor-arg ref="dipFactory" />
		<constructor-arg ref="solrFullUpdatePipeline" />
		<constructor-arg ref="solrUpdateDriver" />
		<constructor-arg value="${error.maxRedeliveries}" />
		<constructor-arg value="${error.retryDelay}" />
	</bean>
	
	<bean id="fcrepo" class="org.fcrepo.camel.FcrepoComponent">
		<property name="authUsername" value="${fcrepo.authUsername}"/>
		<property name="authPassword" value="${fcrepo.authPassword}"/>
		<property name="authHost" value="${fcrepo.authHost}"/>
		<property name="baseUrl" value="${fcrepo.baseUrl}"/>
	</bean>

	<camel:camelContext id="MetaServicesRouter">
		<camel:package>edu.unc.lib.cdr.routing</camel:package>
	</camel:camelContext>

	<camel:camelContext id="CdrServiceImageEnhancements">
		<camel:package>edu.unc.lib.cdr.images</camel:package>
	</camel:camelContext>
	
	<camel:camelContext id="CdrServiceFulltextExtraction">
		<camel:package>edu.unc.lib.cdr.fulltext</camel:package>
	</camel:camelContext>
	
	<camel:camelContext id="CdrServiceReplication">
		<camel:package>edu.unc.lib.cdr.replication</camel:package>
	</camel:camelContext>
	
	<camel:camelContext id="CdrServiceSolr">
		<camel:package>edu.unc.lib.cdr.solr</camel:package>
	</camel:camelContext>
	
	<camel:camelContext id="FcrepoTriplestoreIndexer">
		<camel:package>org.fcrepo.camel.indexing.triplestore</camel:package>
	</camel:camelContext>
	
</beans>