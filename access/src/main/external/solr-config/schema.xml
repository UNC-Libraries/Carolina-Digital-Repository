<?xml version="1.0" encoding="UTF-8" ?>
<!--
     $Id: schema.xml 1818 2011-02-15 18:34:17Z bbpennel $
     $URL: https://vcs.lib.unc.edu/cdr/cdr-access/trunk/solr_config/schema.xml $
     Solr schema for the CDR public UI.  Includes metadata for direct display to the user interface,
     as well as search indexes, facets and basic access control metadata.
     See full field documentation here:
     https://intranet.lib.unc.edu/wikis/staff/index.php/Solr_Schema
     -->
<schema name="ir" version="1.4">
  <!-- attribute "name" is the name of this schema and is only used for display purposes.
       Applications should change this to reflect the nature of the search collection.
       version="1.1" is Solr's version number for the schema syntax and semantics.  It should
       not normally be changed by applications.
       1.0: multiValued attribute did not exist, all fields are multiValued by nature
       1.1: multiValued attribute introduced, false by default -->

  <types>
    <!-- field type definitions. The "name" attribute is
       just a label to be used by field definitions.  The "class"
       attribute and any other attributes determine the real
       behavior of the fieldType.
         Class names starting with "solr" refer to java classes in the
       org.apache.solr.analysis package.
       -->
    <!-- The StrField type is not analyzed, but indexed/stored verbatim.  
       - StrField and TextField support an optional compressThreshold which
       limits compression (if enabled in the derived fields) to values which
       exceed a certain size (in characters).
       -->
    <fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
    
    <!-- numeric field types that store and index the text
         value verbatim (and hence don't support range queries, since the
         lexicographic ordering isn't equal to the numeric ordering) -->
    <fieldType name="integer" class="solr.IntField" omitNorms="true"/>
    <fieldType name="long" class="solr.LongField" omitNorms="true"/>
    <fieldType name="float" class="solr.FloatField" omitNorms="true"/>
    <fieldType name="double" class="solr.DoubleField" omitNorms="true"/>

	<!-- Numeric field types that manipulate the value into
         a string value that isn't human-readable in its internal form,
         but with a lexicographic ordering the same as the numeric ordering,
         so that range queries work correctly. -->
    <fieldType name="sint" class="solr.SortableIntField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="slong" class="solr.SortableLongField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="sfloat" class="solr.SortableFloatField" sortMissingLast="true" omitNorms="true"/>
    <fieldType name="sdouble" class="solr.SortableDoubleField" sortMissingLast="true" omitNorms="true"/>

    <!-- boolean type: "true" or "false" -->
    <fieldType name="boolean" class="solr.BoolField" sortMissingLast="true" omitNorms="true"/>

    <!-- The format for this date field is of the form 1995-12-31T23:59:59Z, and
         is a more restricted form of the canonical representation of dateTime
         http://www.w3.org/TR/xmlschema-2/#dateTime    
         The trailing "Z" designates UTC time and is mandatory.
         Optional fractional seconds are allowed: 1995-12-31T23:59:59.999Z
         All other components are mandatory.

         Expressions can also be used to denote calculations that should be
         performed relative to "NOW" to determine the value, ie...

               NOW/HOUR
                  ... Round to the start of the current hour
               NOW-1DAY
                  ... Exactly 1 day prior to now
               NOW/DAY+6MONTHS+3DAYS
                  ... 6 months and 3 days in the future from the start of
                      the current day
                      
         Consult the DateField javadocs for more information.
         -->
    <fieldType name="date" class="solr.DateField" sortMissingLast="true" omitNorms="true"/>
    
    <!-- A text field that uses WordDelimiterFilter to enable splitting and matching of
        words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
        so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
        Synonyms and stopwords are customized by external files, and stemming is enabled.
        Duplicate tokens at the same position (which may result from Stemmed Synonyms or
        WordDelim parts) are removed.
        -->
    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EnglishPorterFilterFactory" protected="protwords.txt"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.EnglishPorterFilterFactory" protected="protwords.txt"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>
    
    <!-- Text field with stemming and stopwords disabled -->
    <fieldType name="text_ns" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>
  </types>
  <fields>
  	<!-- Control Fields -->
    <field name="id" type="string" indexed="true" stored="true" required="true"/>
    <field name="ancestorPath" type="string" indexed="true" stored="true" required="true" facet.method="enum" multiValued="true"/>
    <field name="ancestorNames" type="string" indexed="true" stored="true" required="true"/>
    <field name="fileAccess" type="string" indexed="true" stored="true" required="true" multiValued="true" default=""/>
    <field name="recordAccess" type="string" indexed="true" stored="true" required="true" multiValued="true" default=""/>
    <field name="surrogateAccess" type="string" indexed="true" stored="true" required="true" multiValued="true" default=""/>
    <field name="resourceType" type="string" indexed="true" stored="true" required="true" facet.method="enum"/>
    <field name="resourceTypeSort" type="string" indexed="true"/>
    <field name="displayOrder" type="slong" indexed="true" stored="true"/>
    <field name="contentType" type="string" indexed="true" stored="true" facet.method="enum" multiValued="true"/>
    <field name="datastream" type="string" indexed="true" stored="true" multiValued="true"/>
    <field name="parentCollection" type="string" indexed="true" stored="true"/>
    
    <!-- Descriptive Fields -->
    <field name="title" type="string" indexed="true" stored="true" required="true"/>
    <field name="otherTitle" type="string" indexed="true" stored="true" multiValued="true"/>
    <field name="abstract" type="string" indexed="true" stored="true"/>
    <field name="keyword" type="string" indexed="true" stored="true" multiValued="true"/>
    <field name="subject" type="string" indexed="true" stored="true" multiValued="true" facet.method="enum"/>
    <field name="language" type="string" indexed="true" stored="true" facet.method="enum"/>
    <field name="creator" type="string" indexed="true" stored="true" multiValued="true"/>
    <field name="name" type="string" indexed="true" stored="true" multiValued="true"/>
    <field name="department" type="string" indexed="true" stored="true" multiValued="true" facet.method="enum"/>
    <field name="creatorType" type="string" indexed="true" stored="true" multiValued="true" facet.method="enum"/>
    <field name="dateCreated" type="date" indexed="true" stored="true"/>
    <field name="dateAdded" type="date" indexed="true" stored="true"/>
    <field name="dateUpdated" type="date" indexed="true" stored="true"/>
    <field name="timestamp" type="date" indexed="true" stored="true" default="NOW" multiValued="false"/>
    <field name="filesize" type="string" indexed="true" stored="true"/>
    
    <!-- Index fields -->
    <!-- Default, primary search field -->
    <field name="text" type="text" indexed="true" stored="false" multiValued="true"/>
    <!-- Specific field indexes -->
    <field name="contributorIndex" type="text_ns" indexed="true" stored="false" multiValued="true"/>
    <field name="titleIndex" type="text" indexed="true" stored="false" multiValued="true"/>
    <field name="subjectIndex" type="text" indexed="true" stored="false" multiValued="true"/>
    
    <!-- Dynamic field definitions.  If a field name is not found, dynamicFields
        will be used if the name matches any of the patterns.
        RESTRICTION: the glob-like pattern in the name attribute must have
        a "*" only at the start or the end.
        EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
        Longer patterns will be matched first.  if equal size patterns
        both match, the first appearing in the schema will be used.  -->
    <dynamicField name="*_i"  type="sint"    indexed="true"  stored="true"/>
    <dynamicField name="*_s"  type="string"  indexed="true"  stored="true"/>
    <dynamicField name="*_l"  type="slong"   indexed="true"  stored="true"/>
    <dynamicField name="*_t"  type="text"    indexed="true"  stored="true"/>
    <dynamicField name="*_b"  type="boolean" indexed="true"  stored="true"/>
    <dynamicField name="*_f"  type="sfloat"  indexed="true"  stored="true"/>
    <dynamicField name="*_d"  type="sdouble" indexed="true"  stored="true"/>
    <dynamicField name="*_dt" type="date"    indexed="true"  stored="true"/>
  </fields>
  <!-- The unique id -->
  <uniqueKey>id</uniqueKey>
  <!-- Default search field -->
  <defaultSearchField>text</defaultSearchField>
  <!-- And search terms by default -->
  <solrQueryParser defaultOperator="AND"/>
  
  <!-- Copy to index fields.  Duplicate copies are for boosting -->
  <copyField source="title" dest="text"/>
  <copyField source="title" dest="text"/>
  <copyField source="otherTitle" dest="text"/>
  <copyField source="creator" dest="text"/>
  <copyField source="name" dest="text"/>
  <copyField source="subject" dest="text"/>
  <copyField source="abstract" dest="text"/>
  <copyField source="keyword" dest="text"/>
  
  <copyField source="title" dest="titleIndex"/>
  <copyField source="otherTitle" dest="titleIndex"/>
  <copyField source="subject" dest="subjectIndex"/>
  <copyField source="creator" dest="contributorIndex"/>
  <copyField source="name" dest="contributorIndex"/>
</schema>