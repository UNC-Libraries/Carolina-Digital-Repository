package edu.unc.lib.dl.rdf; 

import static com.hp.hpl.jena.rdf.model.ResourceFactory.createProperty;
import static com.hp.hpl.jena.rdf.model.ResourceFactory.createResource;

import com.hp.hpl.jena.rdf.model.Property;
import com.hp.hpl.jena.rdf.model.Resource;
 
/**
 * Vocabulary definitions from /Users/bbpennel/Desktop/cdr-schemas/cdr.rdf 
 * @author Auto-generated by schemagen on 05 May 2016 10:57 
 */
public class Cdr {
    
    /** The namespace of the vocabulary as a string */
    public static final String NS = "http://cdr.unc.edu/definitions/model#";
    
    /** The namespace of the vocabulary as a string
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** The namespace of the vocabulary as a resource */
    public static final Resource NAMESPACE = createResource( NS );
    
    /** Name of the view to show by default on a collection record page. */
    public static final Property collectionDefaultView = createProperty( "http://cdr.unc.edu/definitions/model#collectionDefaultView" );
    
    /** Name of a view to show on this collections record page. Repeatable. */
    public static final Property collectionShowView = createProperty( "http://cdr.unc.edu/definitions/model#collectionShowView" );
    
    /** Method by which this deposit was submitted, such as "sword" or "CDR web form". */
    public static final Property depositMethod = createProperty( "http://cdr.unc.edu/definitions/model#depositMethod" );
    
    /** Subclassification of the packaging type for this deposit, such as a METS profile. */
    public static final Property depositPackageProfile = createProperty( "http://cdr.unc.edu/definitions/model#depositPackageProfile" );
    
    /** URI representing the type of packaging used for the original deposit represented 
     *  by this record, such as CDR METS or BagIt.
     */
    public static final Property depositPackageType = createProperty( "http://cdr.unc.edu/definitions/model#depositPackageType" );
    
    /** User who this deposit was submitted on behalf of. */
    public static final Property depositedOnBehalfOf = createProperty( "http://cdr.unc.edu/definitions/model#depositedOnBehalfOf" );
    
    /** Relationship indicating ownership of a manifest by this deposit record */
    public static final Property hasManifest = createProperty( "http://cdr.unc.edu/definitions/model#hasManifest" );
    
    /** Identifier indicating the profile of the metadata provided with this object 
     *  at deposit time. Used to identify what transformation was used to generate 
     *  descriptive metadata from the original metadata.
     */
    public static final Property hasSourceMetadataProfile = createProperty( "http://cdr.unc.edu/definitions/model#hasSourceMetadataProfile" );
    
    /** Reference to a vocabulary object. For objects in this collection, if the given 
     *  vocabulary applies to a descriptive field it will only index its value if 
     *  it is found within the vocabulary.
     */
    public static final Property indexValidTerms = createProperty( "http://cdr.unc.edu/definitions/model#indexValidTerms" );
    
    /** An invalid vocabulary term in this descriptive record. */
    public static final Property invalidTerm = createProperty( "http://cdr.unc.edu/definitions/model#invalidTerm" );
    
    /** Link from an object to the DepositRecord representing the deposit it was ingested 
     *  as a part of.
     */
    public static final Property originalDeposit = createProperty( "http://cdr.unc.edu/definitions/model#originalDeposit" );
    
    /** Relation from an AggregateWork to a child which will be treated as the primary 
     *  work for this object.
     */
    public static final Property primaryObject = createProperty( "http://cdr.unc.edu/definitions/model#primaryObject" );
    
    /** Reference to a vocabulary object. For objects being deposited into this collection, 
     *  attempt to remap invalid terms to valid terms when possible.
     */
    public static final Property replaceInvalidTerms = createProperty( "http://cdr.unc.edu/definitions/model#replaceInvalidTerms" );
    
    /** Selector for identifying fields within descriptive metadata records which 
     *  this vocabulary applies to.
     */
    public static final Property vocabularySelector = createProperty( "http://cdr.unc.edu/definitions/model#vocabularySelector" );
    
    /** Indicates the encoding of terms within this vocabulary. */
    public static final Property vocabularyType = createProperty( "http://cdr.unc.edu/definitions/model#vocabularyType" );
    
    /** URI identifying this vocabulary. */
    public static final Property vocabularyUri = createProperty( "http://cdr.unc.edu/definitions/model#vocabularyUri" );
    
    /** Reference to a vocabulary object. For objects in this collection, display 
     *  warnings in the admin interface if there are invalid vocabulary terms.
     */
    public static final Property warnInvalidTerms = createProperty( "http://cdr.unc.edu/definitions/model#warnInvalidTerms" );
    
    public static final Resource FileObject = createResource( "http://cdr.unc.edu/definitions/model#FileObject" );
    public static final Resource Work = createResource( "http://cdr.unc.edu/definitions/model#Work" );
    public static final Resource Folder = createResource( "http://cdr.unc.edu/definitions/model#Folder" );
    public static final Resource Collection = createResource( "http://cdr.unc.edu/definitions/model#Collection" );
    public static final Resource AdminUnit = createResource( "http://cdr.unc.edu/definitions/model#AdminUnit" );
    public static final Resource ContentRoot = createResource( "http://cdr.unc.edu/definitions/model#ContentRoot" );
    public static final Resource DepositRecord = createResource( "http://cdr.unc.edu/definitions/model#DepositRecord" );
    public static final Resource SourceMetadata = createResource( "http://cdr.unc.edu/definitions/model#SourceMetadata" );
    
    
}
